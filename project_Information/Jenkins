What is Jenkins and why we use it?
Jenkins is an open-source automation tool written in Java with plugins built for Continuous Integration purposes.
Jenkins is used to build and test your software projects continuously making it easier for developers to integrate
changes to the project, and making it easier for users to obtain a fresh build. It also allows you to continuously
deliver your software by integrating with a large number of testing and deployment technologies.

With Jenkins, organizations can accelerate the software development process through automation. Jenkins integrates
development life-cycle processes of all kinds, including build, document, test, package, stage, deploy, static analysis,
 and much more.

Jenkins achieves Continuous Integration with the help of plugins. Plugins allow the integration of Various DevOps stages.
If you want to integrate a particular tool, you need to install the plugins for that tool. For example Git, Maven 2
project, Amazon EC2, HTML publisher etc.

What is Continuous Integration?
Continuous Integration is a development practice in which the developers are required to commit changes to the source
code in a shared repository several times a day or more frequently. Every commit made in the repository is then built.
This allows the teams to detect the problems early. Apart from this, depending on the Continuous Integration tool, there
are several other functions like deploying the build application on the test server, providing the concerned teams with
the build and test results, etc.

